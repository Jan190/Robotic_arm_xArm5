skid4wd:

  joint_state_controller:
    type: "joint_state_controller/JointStateController"
    publish_rate: 50

  #gazebo_ros_control/pid_gains:
    #joint_front_left: {p: 0.01, i: 0.1, d: 0.01}
    #joint_front_right: {p: 0.01, i: 0.1, d: 0.01}
    #joint_rear_left: {p: 0.01, i: 0.1, d: 0.01}
    #joint_rear_right: {p: 0.01, i: 0.1, d: 0.01}
    #joint_palm_riser: {p: 0.01, i: 0.1, d: 0.01}
    # More joints...
  
  palm_riser_controller:
    type: "effort_controllers/JointPositionController"
    publish_rate: 50
    joint: joint_palm_riser
    pid: {p: 2000.0, i: 100, d: 500.0}

  
  drive_controller:
    type: "diff_drive_controller/DiffDriveController"
    left_wheel: ['joint_front_left', 'joint_rear_left']
    right_wheel: ['joint_front_right', 'joint_rear_right']
    publish_rate: 50
    pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]
    cmd_vel_timeout: 0.25

    # Odometry fused with IMU is published by robot_localization, so
    # no need to publish a TF based on encoders alone.
    enable_odom_tf: true

    # Wheel separation and radius multipliers
    wheel_separation_multiplier: 1.0 # default: 1.0
    wheel_radius_multiplier    : 1.0 # default: 1.0

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 2.0   # m/s
        has_acceleration_limits: true
        max_acceleration       : 20.0   # m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 4.0   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 25.0   # rad/s^2
